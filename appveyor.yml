image:
  - Visual Studio 2017

configuration:
  - Debug
  - Release

platform:
  - x64
  - x86

before_build:
  - git submodule update --init --recursive
  - cd libspatialindex

  # Extract Version
  - ps: Get-Content .\CMakeLists.txt | Select-String -Pattern 'SET\(SIDX_LIB_VERSION "(\d\.\d\.\d)"\)' | % { $_.Matches[0].Groups[1].Value } | Out-File -Encoding ASCII .\version
  - set /P version=<version
  - echo "Building Version %version%"

build_script:
  # Configure Build Environment
  - if "%platform%" == "x86" call "C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Auxiliary\Build\vcvars32.bat"
  - if "%platform%" == "x64" call "C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Auxiliary\Build\vcvars64.bat"

  # Configure Cmake-Generator
  - if "%platform%" == "x86" set cmake_generator=Visual Studio 15 2017
  - if "%platform%" == "x64" set cmake_generator=Visual Studio 15 2017 Win64

  # Project Configuration
  - mkdir build
  - cd build
  - cmake -G "%cmake_generator%" "-DCMAKE_BUILD_TYPE=%configuration%" -Dgtest_disable_pthreads=ON -Dgtest_force_shared_crt=ON -DCMAKE_INSTALL_PREFIX=C:\Temp\libspatialindex ..

  # Build & Install
  - cmake --build . --config "%configuration%" --target install

  # Create Artifact
  - set build_tag=msvc15-%configuration%-%platform%
  - set artifact_name=libspatialindex-%version%-%build_tag%.zip
  - 7z a "%artifact_name%" C:\Temp\libspatialindex\*

test_script:
  - ctest

after_tests:
  - appveyor PushArtifact "%artifact_name%"

deploy:
  release: $(version)
  tag: $(version)
  force_update: true
  description: 'AppVeyor CD'
  provider: GitHub
  auth_token:
    secure: aWupJYJFNmN8GhkiNHaV412MnmQuedA9npndju27MejT80u1ERbwRvIt4qptWyDn
  artifact: $(artifact_name)
